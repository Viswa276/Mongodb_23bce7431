USE vit;

DROP TABLE IF EXISTS Employee;
DROP TABLE IF EXISTS Department;

CREATE TABLE Department (
    DeptID INT,
    DeptName VARCHAR(100),
    CONSTRAINT pk_dept PRIMARY KEY (DeptID),
    CONSTRAINT uq_deptname UNIQUE (DeptName)
);

CREATE TABLE Employee (
    EmpID INT,
    EmpName VARCHAR(100) NOT NULL,
    Email VARCHAR(100),
    Salary DECIMAL(10,2),
    DeptID INT,
    Age INT,
    CONSTRAINT pk_emp PRIMARY KEY (EmpID),
    CONSTRAINT uq_email UNIQUE (Email),
    CONSTRAINT fk_emp_dept FOREIGN KEY (DeptID) REFERENCES Department(DeptID),
    CONSTRAINT chk_age CHECK (Age >= 18),
    CONSTRAINT chk_salary CHECK (Salary > 0)
);

INSERT INTO Department (DeptID, DeptName) VALUES
(1, 'HR'),
(2, 'IT'),
(3, 'Finance');

INSERT INTO Employee (EmpID, EmpName, Email, Salary, DeptID, Age) VALUES
(101, 'Alice Johnson', 'alice.johnson@gmail.com', 50000.00, 1, 25),
(102, 'Bob Smith', 'bob.smith@gmail.com', 60000.00, 2, 30),
(103, 'Charlie Brown', 'charlie.brown@gmail.com', 55000.00, 3, 22),
(104, 'David Lee', 'david.lee@gmail.com', 62000.00, 2, 28),
(105, 'Eve Thomas', 'eve.thomas@gmail.com', 58000.00, 1, 26);

ALTER TABLE Employee DROP FOREIGN KEY fk_emp_dept;
ALTER TABLE Employee DROP INDEX uq_email;
ALTER TABLE Employee DROP CHECK chk_age;
SELECT EmpName, Salary 
FROM Employee
WHERE Salary BETWEEN 55000 AND 60000;

SELECT EmpName, Age 
FROM Employee
WHERE Age NOT BETWEEN 25 AND 30;

SELECT MAX(Salary) AS MaxSalary 
FROM Employee;

SELECT MIN(Age) AS MinAge 
FROM Employee;

SELECT COUNT(*) AS TotalEmployees 
FROM Employee;

SELECT AVG(Salary) AS AvgSalary 
FROM Employee;

SELECT SUM(Salary) AS TotalSalaries 
FROM Employee;

SELECT DeptName AS Name 
FROM Department
UNION
SELECT EmpName FROM Employee;

SELECT DeptName AS Name 
FROM Department
UNION ALL
SELECT EmpName FROM Employee;
SELECT 
    EmpName,
    Salary,
    CASE 
        WHEN Salary >= 60000 THEN 'High'
        WHEN Salary BETWEEN 55000 AND 59999.99 THEN 'Medium'
        ELSE 'Low'
    END AS SalaryGrade
FROM 
    Employee;
SELECT EmpName, Salary
FROM Employee
ORDER BY Salary DESC;
SELECT EmpName, DeptID
FROM Employee
ORDER BY DeptID ASC, EmpName ASC;
SELECT DeptID, SUM(Salary) AS TotalSalary
FROM Employee
GROUP BY DeptID;
SELECT DeptID, COUNT(*) AS EmployeeCount
FROM Employee
GROUP BY DeptID;
SELECT EmpName, Email
FROM Employee
WHERE Email LIKE '%vit%';
SELECT EmpName
FROM Employee
WHERE EmpName NOT LIKE '%a%';
CREATE VIEW EmployeeBasicInfo AS
SELECT EmpID, EmpName, Email, DeptID
FROM Employee;
SELECT * FROM EmployeeBasicInfo;
DROP VIEW EmployeeSalaryGrade;
SELECT DISTINCT DeptID
FROM Employee;
